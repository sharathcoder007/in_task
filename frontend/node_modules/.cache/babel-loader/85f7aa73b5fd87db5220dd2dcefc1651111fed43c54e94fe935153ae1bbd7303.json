{"ast":null,"code":"var _jsxFileName = \"/Users/sharathrajkumar/in_task/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ChatInterface from './components/ChatInterface';\nimport LivePreview from './components/LivePreview';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generatedCode, setGeneratedCode] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [chatHistory, setChatHistory] = useState([{\n    id: 1,\n    type: 'system',\n    message: 'Hello! I\\'m your AI web development assistant. Describe what you want to build and I\\'ll create it for you. Try saying something like \"build me a hello world website\" or \"create a modern landing page\".'\n  }]);\n  const handleGenerateWebsite = async prompt => {\n    setIsLoading(true);\n\n    // Add user message to chat\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      message: prompt\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch('/api/generate-website', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setGeneratedCode(data.code);\n\n        // Add AI response to chat\n        const aiMessage = {\n          id: Date.now() + 1,\n          type: 'ai',\n          message: `I've created a website based on your request: \"${prompt}\". The website is now displayed in the preview panel on the right. You can continue to refine it by asking for changes!`\n        };\n        setChatHistory(prev => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.error || 'Failed to generate website');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n\n      // Add error message to chat\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        message: `Sorry, I encountered an error: ${error.message}. Please try again or check your OpenAI API key configuration.`\n      };\n      setChatHistory(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDE80 Cloud IDE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"AI-Powered Web Development\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ide-container\",\n        children: [/*#__PURE__*/_jsxDEV(ChatInterface, {\n          onGenerateWebsite: handleGenerateWebsite,\n          chatHistory: chatHistory,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LivePreview, {\n          code: generatedCode,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M4uv70MAb88o5GczrM+7ZkXUqrk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatInterface","LivePreview","jsxDEV","_jsxDEV","App","_s","generatedCode","setGeneratedCode","isLoading","setIsLoading","chatHistory","setChatHistory","id","type","message","handleGenerateWebsite","prompt","userMessage","Date","now","prev","response","fetch","method","headers","body","JSON","stringify","data","json","success","code","aiMessage","Error","error","console","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenerateWebsite","_c","$RefreshReg$"],"sources":["/Users/sharathrajkumar/in_task/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport ChatInterface from './components/ChatInterface';\nimport LivePreview from './components/LivePreview';\nimport './App.css';\n\nfunction App() {\n  const [generatedCode, setGeneratedCode] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [chatHistory, setChatHistory] = useState([\n    {\n      id: 1,\n      type: 'system',\n      message: 'Hello! I\\'m your AI web development assistant. Describe what you want to build and I\\'ll create it for you. Try saying something like \"build me a hello world website\" or \"create a modern landing page\".'\n    }\n  ]);\n\n  const handleGenerateWebsite = async (prompt) => {\n    setIsLoading(true);\n    \n    // Add user message to chat\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      message: prompt\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n\n    try {\n      const response = await fetch('/api/generate-website', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setGeneratedCode(data.code);\n        \n        // Add AI response to chat\n        const aiMessage = {\n          id: Date.now() + 1,\n          type: 'ai',\n          message: `I've created a website based on your request: \"${prompt}\". The website is now displayed in the preview panel on the right. You can continue to refine it by asking for changes!`\n        };\n        setChatHistory(prev => [...prev, aiMessage]);\n      } else {\n        throw new Error(data.error || 'Failed to generate website');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      \n      // Add error message to chat\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        message: `Sorry, I encountered an error: ${error.message}. Please try again or check your OpenAI API key configuration.`\n      };\n      setChatHistory(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <h1>ðŸš€ Cloud IDE</h1>\n          <p>AI-Powered Web Development</p>\n        </div>\n      </header>\n      \n      <main className=\"app-main\">\n        <div className=\"ide-container\">\n          <ChatInterface \n            onGenerateWebsite={handleGenerateWebsite}\n            chatHistory={chatHistory}\n            isLoading={isLoading}\n          />\n          <LivePreview \n            code={generatedCode}\n            isLoading={isLoading}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}